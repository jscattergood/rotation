/*
 * Copyright 2016 John Scattergood
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
            "com.netflix.nebula:gradle-ospackage-plugin:3.4.0"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: "nebula.rpm"

jar {
    baseName = 'rotation'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/sbuettner/maven' }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'de.infinit:spring-boot-autoconfigure-wro4j:0.0.6'
    compile 'io.reactivex:rxjava:1.0.10'
    compile 'com.sun.mail:javax.mail:1.5.2'

    compile 'org.webjars:jquery:2.2.0'
    compile 'org.webjars:bootstrap:3.3.6'
    compile 'org.webjars:angularjs:1.5.0'
    compile 'org.webjars:angular-ui-bootstrap:1.1.1-1'
    compile 'org.webjars:ui-grid:3.0.7'
    compile 'org.webjars:angular-ui-select:0.14.8'
    compile 'org.webjars:font-awesome:4.5.0'

    testCompile 'org.springframework.boot:spring-boot-starter-test'

    runtime 'com.h2database:h2'
    runtime 'org.postgresql:postgresql'
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

distZip {
    archiveName "${jar.baseName}-${jar.version}.zip"
}

task distRpm(type: Rpm, dependsOn: "installDist") {
    packageName "${jar.baseName}"
    version "${jar.version}"
    user "rotation"
    os LINUX
    from "build/install/"
    into "/opt/rotation"
}

startScripts {
    applicationName "${jar.baseName}"

    doLast {
        def winScriptFile = file getWindowsScript()
        def winFileText = winScriptFile.text
        winFileText = winFileText.replaceAll('set CLASSPATH=.*', 'rem original CLASSPATH declaration replaced by:\nset CLASSPATH=%APP_HOME%\\\\lib\\\\\\*')
        winScriptFile.text = winFileText
    }
}

task extractWebJars(type: Copy) {
    def config = configurations.compile.resolvedConfiguration
    def artifacts = config.resolvedArtifacts
    configurations.compile.files(Specs.convertClosureToSpec {it.group == "org.webjars"}).each { jar ->
        def artifact = artifacts.find {
            it.file.toString() == jar.absolutePath
        }

        if (artifact) {
            copy {
                from zipTree(jar)
                into file("${buildDir}/webjars-content/${artifact.name}")
            }

            def upStreamVersion = "${artifact.moduleVersion.id.version}"
            upStreamVersion = upStreamVersion.replaceAll(/(-[\d.-]+)/, '')

            copy {
                from "${buildDir}/webjars-content/${artifact.name}/META-INF/resources/webjars/${artifact.name}/${upStreamVersion}",
                        "${buildDir}/webjars-content/${artifact.name}/META-INF/resources/webjars/${artifact.name}/${artifact.moduleVersion.id.version}"

                into "${buildDir}/resources/main/static/lib/${artifact.name}"
            }
        }
    }
}
